### Weather Observation Station 2.
->  SELECT ROUND(SUM(LAT_N), 2), ROUND(SUM(LONG_W),2) FROM STATION;

### Weather Observation Station 13.
->  SELECT ROUND(SUM(LAT_N),4) FROM STATION WHERE LAT_N BETWEEN 38.7880 AND 137.2345 ;

### Weather Observation Station 14.
->  SELECT ROUND(LAT_N,4) FROM STATION WHERE LAT_N<137.2345 GROUP BY LAT_N ORDER BY LAT_N DESC LIMIT 1;

### Weather Observation Station 15
->  SELECT ROUND(LONG_W,4) FROM STATION WHERE LAT_N < 137.2345 ORDER BY LAT_N DESC LIMIT 1;

### Weather Observation Station 16
->  SELECT ROUND(LAT_N,4) FROM STATION WHERE LAT_N > 38.7780 ORDER BY LAT_N ASC LIMIT 1 ;

### Weather Observation Station 17
->  SELECT ROUND(LONG_W,4) FROM STATION WHERE LAT_N > 38.7780 ORDER BY LAT_N ASC LIMIT 1;

### Weather Observation Station 18
->  SELECT ROUND(ABS(MIN(LAT_N) - MAX(LAT_N)) + ABS(MIN(LONG_W) - MAX(LONG_W)),4) FROM STATION ;

### Weather Observation Station 19
->  SELECT ROUND(SQRT(POWER(MIN(LAT_N) - MAX(LAT_N),2)+ POWER(MIN(LONG_W) - MAX(LONG_W),2)),4) FROM STATION;

### Type of Triangle
->  SELECT
    CASE
        WHEN (A+B)>C AND (A+C)>B AND (B+C)>A THEN
        CASE
            WHEN ((A=B) AND (A!=C)) OR ((B=C) AND (B!=A)) OR ((C=A) AND (C!=B)) THEN 'Isosceles'
            WHEN ((A=B) AND (A=C)) OR ((B=A) AND (B=C)) OR ((C=A) AND (C=B)) THEN 'Equilateral'
            WHEN (A!=B) AND (A!=C) AND (B!=C) THEN 'Scalene'
        END
    ELSE 'Not A Triangle'
    END TRI
FROM TRIANGLES;
